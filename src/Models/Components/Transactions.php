<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Transactions
{
    /**
     * The date of the transaction - YYYY:MM::DDThh:mm:ss.sTZD
     *
     * @var \DateTime $postedDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('posted_date')]
    public \DateTime $postedDate;

    /**
     * The amount of the transaction.
     *
     * @var float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public float $amount;

    /**
     * Whether the amount is a credit or debit.
     *
     * @var CreditOrDebit $creditOrDebit
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('credit_or_debit')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\CreditOrDebit')]
    public CreditOrDebit $creditOrDebit;

    /**
     * The ID of the source transaction.
     *
     * @var string $sourceTransactionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('source_transaction_id')]
    public string $sourceTransactionId;

    /**
     * A description of the transaction.
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * The counterparty of the transaction.
     *
     * @var ?string $counterparty
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('counterparty')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $counterparty = null;

    /**
     * The reference of the transaction.
     *
     * @var ?string $reference
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('reference')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $reference = null;

    /**
     * Type of transaction.
     *
     * @var ?BankFeedStatementTransactionType $transactionType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transaction_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\BankFeedStatementTransactionType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?BankFeedStatementTransactionType $transactionType = null;

    /**
     * @param  \DateTime  $postedDate
     * @param  float  $amount
     * @param  CreditOrDebit  $creditOrDebit
     * @param  string  $sourceTransactionId
     * @param  ?string  $description
     * @param  ?string  $counterparty
     * @param  ?string  $reference
     * @param  ?BankFeedStatementTransactionType  $transactionType
     * @phpstan-pure
     */
    public function __construct(\DateTime $postedDate, float $amount, CreditOrDebit $creditOrDebit, string $sourceTransactionId, ?string $description = null, ?string $counterparty = null, ?string $reference = null, ?BankFeedStatementTransactionType $transactionType = null)
    {
        $this->postedDate = $postedDate;
        $this->amount = $amount;
        $this->creditOrDebit = $creditOrDebit;
        $this->sourceTransactionId = $sourceTransactionId;
        $this->description = $description;
        $this->counterparty = $counterparty;
        $this->reference = $reference;
        $this->transactionType = $transactionType;
    }
}