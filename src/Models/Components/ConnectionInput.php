<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class ConnectionInput
{
    /**
     * Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
     *
     * @var ?bool $enabled
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('enabled')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $enabled = null;

    /**
     * $configuration
     *
     * @var ?array<ConnectionConfiguration> $configuration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('configuration')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\ConnectionConfiguration>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $configuration = null;

    /**
     * List of custom mappings configured for this connection
     *
     * @var ?array<CustomMappingInput> $customMappings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('custom_mappings')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\CustomMappingInput>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $customMappings = null;

    /**
     * The current consent state of the connection
     *
     * @var ?ConsentState $consentState
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('consent_state')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ConsentState|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ConsentState $consentState = null;

    /**
     *
     * @var ?ConsentRecordInput $latestConsent
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('latest_consent')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ConsentRecordInput|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ConsentRecordInput $latestConsent = null;

    /**
     *
     * @var ?DataScopesInput $applicationDataScopes
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('application_data_scopes')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\DataScopesInput|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DataScopesInput $applicationDataScopes = null;

    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     *
     * @var ?array<string, mixed> $settings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('settings')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $settings = null;

    /**
     * Attach your own consumer specific metadata
     *
     * @var ?array<string, mixed> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     * @param  ?bool  $enabled
     * @param  ?array<ConnectionConfiguration>  $configuration
     * @param  ?array<CustomMappingInput>  $customMappings
     * @param  ?ConsentState  $consentState
     * @param  ?ConsentRecordInput  $latestConsent
     * @param  ?DataScopesInput  $applicationDataScopes
     * @param  ?array<string, mixed>  $settings
     * @param  ?array<string, mixed>  $metadata
     * @phpstan-pure
     */
    public function __construct(?bool $enabled = null, ?array $configuration = null, ?array $customMappings = null, ?ConsentState $consentState = null, ?ConsentRecordInput $latestConsent = null, ?DataScopesInput $applicationDataScopes = null, ?array $settings = null, ?array $metadata = null)
    {
        $this->enabled = $enabled;
        $this->configuration = $configuration;
        $this->customMappings = $customMappings;
        $this->consentState = $consentState;
        $this->latestConsent = $latestConsent;
        $this->applicationDataScopes = $applicationDataScopes;
        $this->settings = $settings;
        $this->metadata = $metadata;
    }
}