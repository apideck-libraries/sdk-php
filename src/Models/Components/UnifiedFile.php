<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class UnifiedFile
{
    /**
     * A unique identifier for an object.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The third-party API ID of original entity
     *
     * @var ?string $downstreamId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('downstream_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $downstreamId = null;

    /**
     * The name of the file
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public ?string $name;

    /**
     * Optional description of the file
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * The type of resource. Could be file, folder or url
     *
     * @var ?FileType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\FileType|null')]
    public ?FileType $type;

    /**
     * The full path of the file or folder (includes the file name)
     *
     * @var ?string $path
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('path')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $path = null;

    /**
     * The MIME type of the file.
     *
     * @var ?string $mimeType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mime_type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $mimeType = null;

    /**
     * Whether the current user can download this file
     *
     * @var ?bool $downloadable
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('downloadable')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $downloadable = null;

    /**
     * The size of the file in bytes
     *
     * @var ?int $size
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('size')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $size = null;

    /**
     *
     * @var ?Owner $owner
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('owner')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Owner|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Owner $owner = null;

    /**
     * The parent folders of the file, starting from the root
     *
     * @var ?array<LinkedFolder> $parentFolders
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parent_folders')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\LinkedFolder>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $parentFolders = null;

    /**
     * Whether the list of parent folders is complete. Some connectors only return the direct parent of a file
     *
     * @var ?bool $parentFoldersComplete
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parent_folders_complete')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $parentFoldersComplete = null;

    /**
     * Permissions the current user has on this file.
     *
     * @var ?Permissions $permissions
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('permissions')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Permissions|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Permissions $permissions = null;

    /**
     * Whether the current file is exportable to other file formats. This property is relevant for proprietary file formats such as Google Docs or Dropbox Paper.
     *
     * @var ?bool $exportable
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exportable')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $exportable = null;

    /**
     * The available file formats when exporting this file.
     *
     * @var ?array<string> $exportFormats
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('export_formats')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $exportFormats = null;

    /**
     * When custom mappings are configured on the resource, the result is included here.
     *
     * @var ?CustomMappings $customMappings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('custom_mappings')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\CustomMappings|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomMappings $customMappings = null;

    /**
     * The user who last updated the object.
     *
     * @var ?string $updatedBy
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_by')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $updatedBy = null;

    /**
     * The user who created the object.
     *
     * @var ?string $createdBy
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_by')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $createdBy = null;

    /**
     * The date and time when the object was last updated.
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * The date and time when the object was created.
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     * @param  string  $id
     * @param  ?string  $name
     * @param  ?FileType  $type
     * @param  ?bool  $downloadable
     * @param  ?Owner  $owner
     * @param  ?array<LinkedFolder>  $parentFolders
     * @param  ?bool  $parentFoldersComplete
     * @param  ?Permissions  $permissions
     * @param  ?bool  $exportable
     * @param  ?string  $downstreamId
     * @param  ?string  $description
     * @param  ?string  $path
     * @param  ?string  $mimeType
     * @param  ?int  $size
     * @param  ?array<string>  $exportFormats
     * @param  ?CustomMappings  $customMappings
     * @param  ?string  $updatedBy
     * @param  ?string  $createdBy
     * @param  ?\DateTime  $updatedAt
     * @param  ?\DateTime  $createdAt
     */
    public function __construct(string $id, ?string $name = null, ?FileType $type = null, ?bool $downloadable = null, ?Owner $owner = null, ?array $parentFolders = null, ?bool $parentFoldersComplete = null, ?Permissions $permissions = null, ?bool $exportable = null, ?string $downstreamId = null, ?string $description = null, ?string $path = null, ?string $mimeType = null, ?int $size = null, ?array $exportFormats = null, ?CustomMappings $customMappings = null, ?string $updatedBy = null, ?string $createdBy = null, ?\DateTime $updatedAt = null, ?\DateTime $createdAt = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->type = $type;
        $this->downloadable = $downloadable;
        $this->owner = $owner;
        $this->parentFolders = $parentFolders;
        $this->parentFoldersComplete = $parentFoldersComplete;
        $this->permissions = $permissions;
        $this->exportable = $exportable;
        $this->downstreamId = $downstreamId;
        $this->description = $description;
        $this->path = $path;
        $this->mimeType = $mimeType;
        $this->size = $size;
        $this->exportFormats = $exportFormats;
        $this->customMappings = $customMappings;
        $this->updatedBy = $updatedBy;
        $this->createdBy = $createdBy;
        $this->updatedAt = $updatedAt;
        $this->createdAt = $createdAt;
    }
}