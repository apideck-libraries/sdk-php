<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Address
{
    /**
     * Unique identifier for the address.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * The type of address.
     *
     * @var ?Type $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Type|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Type $type = null;

    /**
     * The address string. Some APIs don't provide structured address data.
     *
     * @var ?string $string
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('string')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $string = null;

    /**
     * The name of the address.
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Line 1 of the address e.g. number, street, suite, apt #, etc.
     *
     * @var ?string $line1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line1')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line1 = null;

    /**
     * Line 2 of the address
     *
     * @var ?string $line2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line2')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line2 = null;

    /**
     * Line 3 of the address
     *
     * @var ?string $line3
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line3')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line3 = null;

    /**
     * Line 4 of the address
     *
     * @var ?string $line4
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('line4')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $line4 = null;

    /**
     * Street number
     *
     * @var ?string $streetNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $streetNumber = null;

    /**
     * Name of city.
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $city = null;

    /**
     * Name of state
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $state = null;

    /**
     * Zip code or equivalent.
     *
     * @var ?string $postalCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('postal_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $postalCode = null;

    /**
     * country code according to ISO 3166-1 alpha-2.
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * Latitude of the address
     *
     * @var ?string $latitude
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('latitude')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $latitude = null;

    /**
     * Longitude of the address
     *
     * @var ?string $longitude
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('longitude')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $longitude = null;

    /**
     * Address field that holds a sublocality, such as a county
     *
     * @var ?string $county
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('county')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $county = null;

    /**
     * Name of the contact person at the address
     *
     * @var ?string $contactName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contact_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $contactName = null;

    /**
     * Salutation of the contact person at the address
     *
     * @var ?string $salutation
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('salutation')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $salutation = null;

    /**
     * Phone number of the address
     *
     * @var ?string $phoneNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('phone_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $phoneNumber = null;

    /**
     * Fax number of the address
     *
     * @var ?string $fax
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fax')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fax = null;

    /**
     * Email address of the address
     *
     * @var ?string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $email = null;

    /**
     * Website of the address
     *
     * @var ?string $website
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('website')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $website = null;

    /**
     * Additional notes
     *
     * @var ?string $notes
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('notes')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $notes = null;

    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     *
     * @var ?string $rowVersion
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('row_version')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $rowVersion = null;

    /**
     * @param  ?string  $id
     * @param  ?Type  $type
     * @param  ?string  $string
     * @param  ?string  $name
     * @param  ?string  $line1
     * @param  ?string  $line2
     * @param  ?string  $line3
     * @param  ?string  $line4
     * @param  ?string  $streetNumber
     * @param  ?string  $city
     * @param  ?string  $state
     * @param  ?string  $postalCode
     * @param  ?string  $country
     * @param  ?string  $latitude
     * @param  ?string  $longitude
     * @param  ?string  $county
     * @param  ?string  $contactName
     * @param  ?string  $salutation
     * @param  ?string  $phoneNumber
     * @param  ?string  $fax
     * @param  ?string  $email
     * @param  ?string  $website
     * @param  ?string  $notes
     * @param  ?string  $rowVersion
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?Type $type = null, ?string $string = null, ?string $name = null, ?string $line1 = null, ?string $line2 = null, ?string $line3 = null, ?string $line4 = null, ?string $streetNumber = null, ?string $city = null, ?string $state = null, ?string $postalCode = null, ?string $country = null, ?string $latitude = null, ?string $longitude = null, ?string $county = null, ?string $contactName = null, ?string $salutation = null, ?string $phoneNumber = null, ?string $fax = null, ?string $email = null, ?string $website = null, ?string $notes = null, ?string $rowVersion = null)
    {
        $this->id = $id;
        $this->type = $type;
        $this->string = $string;
        $this->name = $name;
        $this->line1 = $line1;
        $this->line2 = $line2;
        $this->line3 = $line3;
        $this->line4 = $line4;
        $this->streetNumber = $streetNumber;
        $this->city = $city;
        $this->state = $state;
        $this->postalCode = $postalCode;
        $this->country = $country;
        $this->latitude = $latitude;
        $this->longitude = $longitude;
        $this->county = $county;
        $this->contactName = $contactName;
        $this->salutation = $salutation;
        $this->phoneNumber = $phoneNumber;
        $this->fax = $fax;
        $this->email = $email;
        $this->website = $website;
        $this->notes = $notes;
        $this->rowVersion = $rowVersion;
    }
}