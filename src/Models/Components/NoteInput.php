<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class NoteInput
{
    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     *
     * @var ?array<PassThroughBody> $passThrough
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('pass_through')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\PassThroughBody>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $passThrough = null;

    /**
     * The title of the note
     *
     * @var ?string $title
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('title')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $title = null;

    /**
     * The content of the note.
     *
     * @var ?string $content
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('content')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $content = null;

    /**
     * The user that owns the note.
     *
     * @var ?string $ownerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('owner_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $ownerId = null;

    /**
     * The contact that is related to the note.
     *
     * @var ?string $contactId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contact_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $contactId = null;

    /**
     * The company that is related to the note.
     *
     * @var ?string $companyId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('company_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $companyId = null;

    /**
     * The opportunity that is related to the note.
     *
     * @var ?string $opportunityId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('opportunity_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $opportunityId = null;

    /**
     * The activity that is related to the note.
     *
     * @var ?string $activityId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('activity_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $activityId = null;

    /**
     * The lead that is related to the note.
     *
     * @var ?string $leadId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lead_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $leadId = null;

    /**
     * Whether the Note is active or not.
     *
     * @var ?bool $active
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('active')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $active = null;

    /**
     * @param  ?array<PassThroughBody>  $passThrough
     * @param  ?string  $title
     * @param  ?string  $content
     * @param  ?string  $ownerId
     * @param  ?string  $contactId
     * @param  ?string  $companyId
     * @param  ?string  $opportunityId
     * @param  ?string  $activityId
     * @param  ?string  $leadId
     * @param  ?bool  $active
     * @phpstan-pure
     */
    public function __construct(?array $passThrough = null, ?string $title = null, ?string $content = null, ?string $ownerId = null, ?string $contactId = null, ?string $companyId = null, ?string $opportunityId = null, ?string $activityId = null, ?string $leadId = null, ?bool $active = null)
    {
        $this->passThrough = $passThrough;
        $this->title = $title;
        $this->content = $content;
        $this->ownerId = $ownerId;
        $this->contactId = $contactId;
        $this->companyId = $companyId;
        $this->opportunityId = $opportunityId;
        $this->activityId = $activityId;
        $this->leadId = $leadId;
        $this->active = $active;
    }
}