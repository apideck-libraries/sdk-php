<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Credentials
{
    /**
     * Access token
     *
     * @var ?string $accessToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('access_token')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $accessToken = null;

    /**
     * The refresh token can be used to obtain a new access token.
     *
     * @var ?string $refreshToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refresh_token')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $refreshToken = null;

    /**
     * The datetime at which the token was issued. If omitted the token will be queued for refresh.
     *
     * @var ?\DateTime $issuedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('issued_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $issuedAt = null;

    /**
     * The number of seconds until the token expires. If omitted the token will be queued for refresh.
     *
     * @var ?int $expiresIn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_in')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiresIn = null;

    /**
     * @param  ?string  $accessToken
     * @param  ?string  $refreshToken
     * @param  ?\DateTime  $issuedAt
     * @param  ?int  $expiresIn
     * @phpstan-pure
     */
    public function __construct(?string $accessToken = null, ?string $refreshToken = null, ?\DateTime $issuedAt = null, ?int $expiresIn = null)
    {
        $this->accessToken = $accessToken;
        $this->refreshToken = $refreshToken;
        $this->issuedAt = $issuedAt;
        $this->expiresIn = $expiresIn;
    }
}