<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class WebhookEventLog
{
    /**
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * HTTP Status code that was returned.
     *
     * @var ?int $statusCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $statusCode = null;

    /**
     * Whether or not the request was successful.
     *
     * @var ?bool $success
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('success')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $success = null;

    /**
     * ID of your Apideck Application
     *
     * @var ?string $applicationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('application_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $applicationId = null;

    /**
     * Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.
     *
     * @var ?string $consumerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('consumer_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $consumerId = null;

    /**
     * Name of Apideck Unified API
     *
     * @var ?UnifiedApiId $unifiedApi
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unified_api')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\UnifiedApiId|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?UnifiedApiId $unifiedApi = null;

    /**
     * Apideck service provider associated with event.
     *
     * @var ?WebhookEventLogService $service
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('service')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\WebhookEventLogService|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?WebhookEventLogService $service = null;

    /**
     * The URL of the webhook endpoint.
     *
     * @var ?string $endpoint
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('endpoint')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $endpoint = null;

    /**
     * Name of source event that webhook is subscribed to.
     *
     * @var ?string $eventType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('event_type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $eventType = null;

    /**
     * Number of attempts webhook endpoint was called before a success was returned or eventually failed
     *
     * @var ?float $executionAttempt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('execution_attempt')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $executionAttempt = null;

    /**
     * HTTP Method of request to endpoint.
     *
     * @var ?string $httpMethod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('http_method')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $httpMethod = null;

    /**
     * ISO Date and time when the request was made.
     *
     * @var ?string $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $timestamp = null;

    /**
     * Name of the Entity described by the attributes delivered within payload
     *
     * @var ?string $entityType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('entity_type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $entityType = null;

    /**
     * The JSON stringified payload that was delivered to the webhook endpoint.
     *
     * @var ?string $requestBody
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('request_body')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $requestBody = null;

    /**
     * The JSON stringified response that was returned from the webhook endpoint.
     *
     * @var ?string $responseBody
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('response_body')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $responseBody = null;

    /**
     * If the request has not hit the max retry limit and will be retried.
     *
     * @var ?bool $retryScheduled
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('retry_scheduled')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $retryScheduled = null;

    /**
     * record of each attempt to call webhook endpoint
     *
     * @var ?array<Attempts> $attempts
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('attempts')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\Attempts>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $attempts = null;

    /**
     * @param  ?string  $id
     * @param  ?int  $statusCode
     * @param  ?bool  $success
     * @param  ?string  $applicationId
     * @param  ?string  $consumerId
     * @param  ?UnifiedApiId  $unifiedApi
     * @param  ?WebhookEventLogService  $service
     * @param  ?string  $endpoint
     * @param  ?string  $eventType
     * @param  ?float  $executionAttempt
     * @param  ?string  $httpMethod
     * @param  ?string  $timestamp
     * @param  ?string  $entityType
     * @param  ?string  $requestBody
     * @param  ?string  $responseBody
     * @param  ?bool  $retryScheduled
     * @param  ?array<Attempts>  $attempts
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?int $statusCode = null, ?bool $success = null, ?string $applicationId = null, ?string $consumerId = null, ?UnifiedApiId $unifiedApi = null, ?WebhookEventLogService $service = null, ?string $endpoint = null, ?string $eventType = null, ?float $executionAttempt = null, ?string $httpMethod = null, ?string $timestamp = null, ?string $entityType = null, ?string $requestBody = null, ?string $responseBody = null, ?bool $retryScheduled = null, ?array $attempts = null)
    {
        $this->id = $id;
        $this->statusCode = $statusCode;
        $this->success = $success;
        $this->applicationId = $applicationId;
        $this->consumerId = $consumerId;
        $this->unifiedApi = $unifiedApi;
        $this->service = $service;
        $this->endpoint = $endpoint;
        $this->eventType = $eventType;
        $this->executionAttempt = $executionAttempt;
        $this->httpMethod = $httpMethod;
        $this->timestamp = $timestamp;
        $this->entityType = $entityType;
        $this->requestBody = $requestBody;
        $this->responseBody = $responseBody;
        $this->retryScheduled = $retryScheduled;
        $this->attempts = $attempts;
    }
}