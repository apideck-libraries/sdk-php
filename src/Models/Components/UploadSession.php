<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class UploadSession
{
    /**
     * A unique identifier for an object.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Indicates if the upload session was completed successfully.
     *
     * @var ?bool $success
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('success')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $success = null;

    /**
     * Size in bytes of each part of the file that you will upload. Uploaded parts need to be this size for the upload to be successful.
     *
     * @var ?float $partSize
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('part_size')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $partSize = null;

    /**
     * Indicates if parts of the file can uploaded in parallel.
     *
     * @var ?bool $parallelUploadSupported
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parallel_upload_supported')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $parallelUploadSupported = null;

    /**
     * The range of bytes that was successfully uploaded.
     *
     * @var ?string $uploadedByteRange
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('uploaded_byte_range')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $uploadedByteRange = null;

    /**
     *
     * @var ?\DateTime $expiresAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $expiresAt = null;

    /**
     * @param  ?string  $id
     * @param  ?bool  $success
     * @param  ?float  $partSize
     * @param  ?bool  $parallelUploadSupported
     * @param  ?string  $uploadedByteRange
     * @param  ?\DateTime  $expiresAt
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?bool $success = null, ?float $partSize = null, ?bool $parallelUploadSupported = null, ?string $uploadedByteRange = null, ?\DateTime $expiresAt = null)
    {
        $this->id = $id;
        $this->success = $success;
        $this->partSize = $partSize;
        $this->parallelUploadSupported = $parallelUploadSupported;
        $this->uploadedByteRange = $uploadedByteRange;
        $this->expiresAt = $expiresAt;
    }
}