<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


/** WebhookSupport - How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling. */
class WebhookSupport
{
    /**
     * Mode of the webhook support.
     *
     * @var ?Mode $mode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mode')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Mode|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Mode $mode = null;

    /**
     * Received events are scoped to connection or across integration.
     *
     * @var ?SubscriptionLevel $subscriptionLevel
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscription_level')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\SubscriptionLevel|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SubscriptionLevel $subscriptionLevel = null;

    /**
     * How the subscription is managed in the downstream.
     *
     * @var ?ManagedVia $managedVia
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('managed_via')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ManagedVia|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ManagedVia $managedVia = null;

    /**
     * Virtual webhook config for the connector.
     *
     * @var ?VirtualWebhooks $virtualWebhooks
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('virtual_webhooks')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\VirtualWebhooks|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?VirtualWebhooks $virtualWebhooks = null;

    /**
     * @param  ?Mode  $mode
     * @param  ?SubscriptionLevel  $subscriptionLevel
     * @param  ?ManagedVia  $managedVia
     * @param  ?VirtualWebhooks  $virtualWebhooks
     * @phpstan-pure
     */
    public function __construct(?Mode $mode = null, ?SubscriptionLevel $subscriptionLevel = null, ?ManagedVia $managedVia = null, ?VirtualWebhooks $virtualWebhooks = null)
    {
        $this->mode = $mode;
        $this->subscriptionLevel = $subscriptionLevel;
        $this->managedVia = $managedVia;
        $this->virtualWebhooks = $virtualWebhooks;
    }
}