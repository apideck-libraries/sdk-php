<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Payroll
{
    /**
     * A unique identifier for an object.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public ?string $id;

    /**
     * Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
     *
     * @var ?bool $processed
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('processed')]
    public ?bool $processed;

    /**
     * The date on which employees will be paid for the payroll.
     *
     * @var ?string $checkDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('check_date')]
    public ?string $checkDate;

    /**
     * The start date, inclusive, of the pay period.
     *
     * @var ?string $startDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('start_date')]
    public ?string $startDate;

    /**
     * The end date, inclusive, of the pay period.
     *
     * @var ?string $endDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('end_date')]
    public ?string $endDate;

    /**
     * The overview of the payroll totals.
     *
     * @var ?PayrollTotals $totals
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('totals')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\PayrollTotals|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PayrollTotals $totals = null;

    /**
     * An array of compensations for the payroll.
     *
     * @var ?array<Compensation> $compensations
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('compensations')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\Compensation>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $compensations = null;

    /**
     * The unique identifier of the company.
     *
     * @var ?string $companyId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('company_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $companyId = null;

    /**
     * The date the payroll was processed.
     *
     * @var ?string $processedDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('processed_date')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $processedDate = null;

    /**
     * When custom mappings are configured on the resource, the result is included here.
     *
     * @var ?array<string, mixed> $customMappings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('custom_mappings')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $customMappings = null;

    /**
     * @param  ?string  $id
     * @param  ?bool  $processed
     * @param  ?string  $checkDate
     * @param  ?string  $startDate
     * @param  ?string  $endDate
     * @param  ?PayrollTotals  $totals
     * @param  ?array<Compensation>  $compensations
     * @param  ?string  $companyId
     * @param  ?string  $processedDate
     * @param  ?array<string, mixed>  $customMappings
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?bool $processed = null, ?string $checkDate = null, ?string $startDate = null, ?string $endDate = null, ?PayrollTotals $totals = null, ?array $compensations = null, ?string $companyId = null, ?string $processedDate = null, ?array $customMappings = null)
    {
        $this->id = $id;
        $this->processed = $processed;
        $this->checkDate = $checkDate;
        $this->startDate = $startDate;
        $this->endDate = $endDate;
        $this->totals = $totals;
        $this->compensations = $compensations;
        $this->companyId = $companyId;
        $this->processedDate = $processedDate;
        $this->customMappings = $customMappings;
    }
}