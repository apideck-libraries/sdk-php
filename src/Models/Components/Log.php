<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Log
{
    /**
     * Indicates if the request was made via REST or Graphql endpoint.
     *
     * @var string $apiStyle
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('api_style')]
    public string $apiStyle;

    /**
     * The Apideck base URL the request was made to.
     *
     * @var string $baseUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('base_url')]
    public string $baseUrl;

    /**
     * Indicates whether or not this is a child or parent request.
     *
     * @var bool $childRequest
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('child_request')]
    public bool $childRequest;

    /**
     * The consumer Id associated with the request.
     *
     * @var string $consumerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('consumer_id')]
    public string $consumerId;

    /**
     * The entire execution time in milliseconds it took to call the Apideck service provider.
     *
     * @var float $duration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duration')]
    public float $duration;

    /**
     * The entire execution time in milliseconds it took to make the request.
     *
     * @var int $execution
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('execution')]
    public int $execution;

    /**
     * When request is a parent request, this indicates if there are child requests associated.
     *
     * @var bool $hasChildren
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_children')]
    public bool $hasChildren;

    /**
     * HTTP Method of request.
     *
     * @var string $httpMethod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('http_method')]
    public string $httpMethod;

    /**
     * UUID acting as Request Identifier.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Latency added by making this request via Unified Api.
     *
     * @var float $latency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('latency')]
    public float $latency;

    /**
     * The request as defined in OpenApi Spec.
     *
     * @var Operation $operation
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('operation')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Operation')]
    public Operation $operation;

    /**
     * The path component of the URI the request was made to.
     *
     * @var string $path
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('path')]
    public string $path;

    /**
     * Indicates whether the request was made using Apidecks sandbox credentials or not.
     *
     * @var bool $sandbox
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sandbox')]
    public bool $sandbox;

    /**
     * Apideck service provider associated with request.
     *
     * @var Service $service
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('service')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\Service')]
    public Service $service;

    /**
     * HTTP Status code that was returned.
     *
     * @var int $statusCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status_code')]
    public int $statusCode;

    /**
     * Whether or not the request was successful.
     *
     * @var bool $success
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('success')]
    public bool $success;

    /**
     * ISO Date and time when the request was made.
     *
     * @var string $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    public string $timestamp;

    /**
     * Which Unified Api request was made to.
     *
     * @var UnifiedApi $unifiedApi
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unified_api')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\UnifiedApi')]
    public UnifiedApi $unifiedApi;

    /**
     * When request is a child request, this UUID indicates it's parent request.
     *
     * @var ?string $parentId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parent_id')]
    public ?string $parentId;

    /**
     * If error occurred, this is brief explanation
     *
     * @var ?string $errorMessage
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error_message')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $errorMessage = null;

    /**
     * The IP address of the source of the request.
     *
     * @var ?string $sourceIp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('source_ip')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $sourceIp = null;

    /**
     * @param  string  $apiStyle
     * @param  string  $baseUrl
     * @param  bool  $childRequest
     * @param  string  $consumerId
     * @param  float  $duration
     * @param  int  $execution
     * @param  bool  $hasChildren
     * @param  string  $httpMethod
     * @param  string  $id
     * @param  float  $latency
     * @param  Operation  $operation
     * @param  string  $path
     * @param  bool  $sandbox
     * @param  Service  $service
     * @param  int  $statusCode
     * @param  bool  $success
     * @param  string  $timestamp
     * @param  UnifiedApi  $unifiedApi
     * @param  ?string  $parentId
     * @param  ?string  $errorMessage
     * @param  ?string  $sourceIp
     * @phpstan-pure
     */
    public function __construct(string $apiStyle, string $baseUrl, bool $childRequest, string $consumerId, float $duration, int $execution, bool $hasChildren, string $httpMethod, string $id, float $latency, Operation $operation, string $path, bool $sandbox, Service $service, int $statusCode, bool $success, string $timestamp, UnifiedApi $unifiedApi, ?string $parentId = null, ?string $errorMessage = null, ?string $sourceIp = null)
    {
        $this->apiStyle = $apiStyle;
        $this->baseUrl = $baseUrl;
        $this->childRequest = $childRequest;
        $this->consumerId = $consumerId;
        $this->duration = $duration;
        $this->execution = $execution;
        $this->hasChildren = $hasChildren;
        $this->httpMethod = $httpMethod;
        $this->id = $id;
        $this->latency = $latency;
        $this->operation = $operation;
        $this->path = $path;
        $this->sandbox = $sandbox;
        $this->service = $service;
        $this->statusCode = $statusCode;
        $this->success = $success;
        $this->timestamp = $timestamp;
        $this->unifiedApi = $unifiedApi;
        $this->parentId = $parentId;
        $this->errorMessage = $errorMessage;
        $this->sourceIp = $sourceIp;
    }
}