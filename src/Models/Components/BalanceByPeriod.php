<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;

use Brick\DateTime\LocalDate;
class BalanceByPeriod
{
    /**
     * Total amount of the period.
     *
     * @var ?float $totalAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('total_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $totalAmount = null;

    /**
     * $balancesByTransaction
     *
     * @var ?array<BalanceByTransaction> $balancesByTransaction
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('balances_by_transaction')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\BalanceByTransaction>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $balancesByTransaction = null;

    /**
     * The starting date of the period. If not provided, it represents the oldest period, where all transactions due before the specified `end_date` are included.
     *
     * @var ?LocalDate $startDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('start_date')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LocalDate $startDate = null;

    /**
     * The ending date of the period. If not provided, it represents an open-ended period starting from the `start_date`, typically capturing future-dated transactions that are not yet aged.
     *
     * @var ?LocalDate $endDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('end_date')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LocalDate $endDate = null;

    /**
     * @param  ?float  $totalAmount
     * @param  ?array<BalanceByTransaction>  $balancesByTransaction
     * @param  ?LocalDate  $startDate
     * @param  ?LocalDate  $endDate
     * @phpstan-pure
     */
    public function __construct(?float $totalAmount = null, ?array $balancesByTransaction = null, ?LocalDate $startDate = null, ?LocalDate $endDate = null)
    {
        $this->totalAmount = $totalAmount;
        $this->balancesByTransaction = $balancesByTransaction;
        $this->startDate = $startDate;
        $this->endDate = $endDate;
    }
}