<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class PassThroughBody
{
    /**
     * Identifier for the service to which this pass_through should be applied.
     *
     * @var string $serviceId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('service_id')]
    public string $serviceId;

    /**
     * Optional identifier for a workflow operation to which this pass_through should be applied. This is useful for Unify calls that are making more than one downstream request.
     *
     * @var ?string $operationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('operation_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $operationId = null;

    /**
     * Simple object allowing any properties for direct extension.
     *
     * @var ?array<string, mixed> $extendObject
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('extend_object')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $extendObject = null;

    /**
     * Array of objects for structured data modifications via paths.
     *
     * @var ?array<ExtendPaths> $extendPaths
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('extend_paths')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\ExtendPaths>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $extendPaths = null;

    /**
     * @param  string  $serviceId
     * @param  ?string  $operationId
     * @param  ?array<string, mixed>  $extendObject
     * @param  ?array<ExtendPaths>  $extendPaths
     */
    public function __construct(string $serviceId, ?string $operationId = null, ?array $extendObject = null, ?array $extendPaths = null)
    {
        $this->serviceId = $serviceId;
        $this->operationId = $operationId;
        $this->extendObject = $extendObject;
        $this->extendPaths = $extendPaths;
    }
}