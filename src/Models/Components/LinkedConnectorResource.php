<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class LinkedConnectorResource
{
    /**
     * ID of the resource, typically a lowercased version of name.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Name of the resource (plural)
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Status of the resource. Resources with status live or beta are callable.
     *
     * @var ?ResourceStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ResourceStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ResourceStatus $status = null;

    /**
     * ID of the resource in the Connector's API (downstream)
     *
     * @var ?string $downstreamId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('downstream_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $downstreamId = null;

    /**
     * Name of the resource in the Connector's API (downstream)
     *
     * @var ?string $downstreamName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('downstream_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $downstreamName = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $name
     * @param  ?ResourceStatus  $status
     * @param  ?string  $downstreamId
     * @param  ?string  $downstreamName
     */
    public function __construct(?string $id = null, ?string $name = null, ?ResourceStatus $status = null, ?string $downstreamId = null, ?string $downstreamName = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->status = $status;
        $this->downstreamId = $downstreamId;
        $this->downstreamName = $downstreamName;
    }
}