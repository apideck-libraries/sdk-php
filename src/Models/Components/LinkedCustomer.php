<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


/** LinkedCustomer - The customer this entity is linked to. */
class LinkedCustomer
{
    /**
     * The ID of the customer this entity is linked to.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * The display ID of the customer.
     *
     * @var ?string $displayId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('display_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $displayId = null;

    /**
     * The display name of the customer.
     *
     * @var ?string $displayName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('display_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $displayName = null;

    /**
     * The name of the customer. Deprecated, use display_name instead.
     *
     * @var ?string $name
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * The company name of the customer.
     *
     * @var ?string $companyName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('company_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $companyName = null;

    /**
     * The email address of the customer.
     *
     * @var ?string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $email = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $name
     * @param  ?string  $email
     * @param  ?string  $displayId
     * @param  ?string  $displayName
     * @param  ?string  $companyName
     */
    public function __construct(?string $id = null, ?string $name = null, ?string $email = null, ?string $displayId = null, ?string $displayName = null, ?string $companyName = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->email = $email;
        $this->displayId = $displayId;
        $this->displayName = $displayName;
        $this->companyName = $companyName;
    }
}