<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify\Models\Components;


class Connection
{
    /**
     * The unique identifier of the connection.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * The ID of the service this connection belongs to.
     *
     * @var ?string $serviceId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('service_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $serviceId = null;

    /**
     * The name of the connection
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     *
     * @var ?string $tagLine
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tag_line')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $tagLine = null;

    /**
     * The unified API category where the connection belongs to.
     *
     * @var ?string $unifiedApi
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unified_api')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $unifiedApi = null;

    /**
     * [Connection state flow](#section/Connection-state)
     *
     * @var ?ConnectionState $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ConnectionState|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ConnectionState $state = null;

    /**
     * The current state of the Integration.
     *
     * @var ?IntegrationState $integrationState
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('integration_state')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\IntegrationState|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?IntegrationState $integrationState = null;

    /**
     * Type of authorization used by the connector
     *
     * @var ?AuthType $authType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('auth_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\AuthType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AuthType $authType = null;

    /**
     * OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
     *
     * @var ?OAuthGrantType $oauthGrantType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('oauth_grant_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\OAuthGrantType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?OAuthGrantType $oauthGrantType = null;

    /**
     * Status of the connection.
     *
     * @var ?ConnectionStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Apideck\Unify\Models\Components\ConnectionStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ConnectionStatus $status = null;

    /**
     * Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
     *
     * @var ?bool $enabled
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('enabled')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $enabled = null;

    /**
     * The website URL of the connection
     *
     * @var ?string $website
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('website')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $website = null;

    /**
     * A visual icon of the connection, that will be shown in the Vault
     *
     * @var ?string $icon
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('icon')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $icon = null;

    /**
     * The logo of the connection, that will be shown in the Vault
     *
     * @var ?string $logo
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('logo')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $logo = null;

    /**
     * The settings that are wanted to create a connection.
     *
     * @var ?array<FormField> $formFields
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('form_fields')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\FormField>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $formFields = null;

    /**
     * $configuration
     *
     * @var ?array<Configuration> $configuration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('configuration')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\Configuration>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $configuration = null;

    /**
     * $configurableResources
     *
     * @var ?array<string> $configurableResources
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('configurable_resources')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $configurableResources = null;

    /**
     * $resourceSchemaSupport
     *
     * @var ?array<string> $resourceSchemaSupport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('resource_schema_support')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $resourceSchemaSupport = null;

    /**
     * $resourceSettingsSupport
     *
     * @var ?array<string> $resourceSettingsSupport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('resource_settings_support')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $resourceSettingsSupport = null;

    /**
     *
     * @var ?bool $validationSupport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('validation_support')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $validationSupport = null;

    /**
     *
     * @var ?bool $schemaSupport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('schema_support')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $schemaSupport = null;

    /**
     * List of settings that are required to be configured on integration before authorization can occur
     *
     * @var ?array<string> $settingsRequiredForAuthorization
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('settings_required_for_authorization')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $settingsRequiredForAuthorization = null;

    /**
     * $subscriptions
     *
     * @var ?array<WebhookSubscription> $subscriptions
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscriptions')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\WebhookSubscription>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $subscriptions = null;

    /**
     * Whether the connector has a guide available in the developer docs or not (https://docs.apideck.com/connectors/{service_id}/docs/consumer+connection).
     *
     * @var ?bool $hasGuide
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_guide')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $hasGuide = null;

    /**
     *
     * @var ?float $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $createdAt = null;

    /**
     * List of custom mappings configured for this connection
     *
     * @var ?array<CustomMapping> $customMappings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('custom_mappings')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Apideck\Unify\Models\Components\CustomMapping>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $customMappings = null;

    /**
     * The OAuth redirect URI. Redirect your users to this URI to let them authorize your app in the connector's UI. Before you can use this URI, you must add `redirect_uri` as a query parameter to the `authorize_url`. Be sure to URL encode the `redirect_uri` part. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector's UI.
     *
     * @var ?string $authorizeUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorize_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $authorizeUrl = null;

    /**
     * The OAuth revoke URI. Redirect your users to this URI to revoke this connection. Before you can use this URI, you must add `redirect_uri` as a query parameter. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector's UI.
     *
     * @var ?string $revokeUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('revoke_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $revokeUrl = null;

    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     *
     * @var ?array<string, mixed> $settings
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('settings')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $settings = null;

    /**
     * Attach your own consumer specific metadata
     *
     * @var ?array<string, mixed> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     *
     * @var ?float $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $updatedAt = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $serviceId
     * @param  ?string  $name
     * @param  ?string  $tagLine
     * @param  ?string  $unifiedApi
     * @param  ?ConnectionState  $state
     * @param  ?IntegrationState  $integrationState
     * @param  ?AuthType  $authType
     * @param  ?OAuthGrantType  $oauthGrantType
     * @param  ?ConnectionStatus  $status
     * @param  ?bool  $enabled
     * @param  ?string  $website
     * @param  ?string  $icon
     * @param  ?string  $logo
     * @param  ?array<FormField>  $formFields
     * @param  ?array<Configuration>  $configuration
     * @param  ?array<string>  $configurableResources
     * @param  ?array<string>  $resourceSchemaSupport
     * @param  ?array<string>  $resourceSettingsSupport
     * @param  ?bool  $validationSupport
     * @param  ?bool  $schemaSupport
     * @param  ?array<string>  $settingsRequiredForAuthorization
     * @param  ?array<WebhookSubscription>  $subscriptions
     * @param  ?bool  $hasGuide
     * @param  ?float  $createdAt
     * @param  ?array<CustomMapping>  $customMappings
     * @param  ?string  $authorizeUrl
     * @param  ?string  $revokeUrl
     * @param  ?array<string, mixed>  $settings
     * @param  ?array<string, mixed>  $metadata
     * @param  ?float  $updatedAt
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $serviceId = null, ?string $name = null, ?string $tagLine = null, ?string $unifiedApi = null, ?ConnectionState $state = null, ?IntegrationState $integrationState = null, ?AuthType $authType = null, ?OAuthGrantType $oauthGrantType = null, ?ConnectionStatus $status = null, ?bool $enabled = null, ?string $website = null, ?string $icon = null, ?string $logo = null, ?array $formFields = null, ?array $configuration = null, ?array $configurableResources = null, ?array $resourceSchemaSupport = null, ?array $resourceSettingsSupport = null, ?bool $validationSupport = null, ?bool $schemaSupport = null, ?array $settingsRequiredForAuthorization = null, ?array $subscriptions = null, ?bool $hasGuide = null, ?float $createdAt = null, ?array $customMappings = null, ?string $authorizeUrl = null, ?string $revokeUrl = null, ?array $settings = null, ?array $metadata = null, ?float $updatedAt = null)
    {
        $this->id = $id;
        $this->serviceId = $serviceId;
        $this->name = $name;
        $this->tagLine = $tagLine;
        $this->unifiedApi = $unifiedApi;
        $this->state = $state;
        $this->integrationState = $integrationState;
        $this->authType = $authType;
        $this->oauthGrantType = $oauthGrantType;
        $this->status = $status;
        $this->enabled = $enabled;
        $this->website = $website;
        $this->icon = $icon;
        $this->logo = $logo;
        $this->formFields = $formFields;
        $this->configuration = $configuration;
        $this->configurableResources = $configurableResources;
        $this->resourceSchemaSupport = $resourceSchemaSupport;
        $this->resourceSettingsSupport = $resourceSettingsSupport;
        $this->validationSupport = $validationSupport;
        $this->schemaSupport = $schemaSupport;
        $this->settingsRequiredForAuthorization = $settingsRequiredForAuthorization;
        $this->subscriptions = $subscriptions;
        $this->hasGuide = $hasGuide;
        $this->createdAt = $createdAt;
        $this->customMappings = $customMappings;
        $this->authorizeUrl = $authorizeUrl;
        $this->revokeUrl = $revokeUrl;
        $this->settings = $settings;
        $this->metadata = $metadata;
        $this->updatedAt = $updatedAt;
    }
}