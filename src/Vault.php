<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Apideck\Unify;



class Vault
{
    private SDKConfiguration $sdkConfiguration;
    public Consumers $consumers;

    public ConsumerRequestCounts $consumerRequestCounts;

    public Connections $connections;

    public ValidateConnection $validateConnection;

    public CreateCallback $createCallback;

    public ConnectionSettings $connectionSettings;

    public CustomFields $customFields;

    public ConnectionCustomMappings $connectionCustomMappings;

    public CustomMappings $customMappings;

    public Sessions $sessions;

    public Logs $logs;

    /**
     * @param  SDKConfiguration  $sdkConfig
     */
    public function __construct(public SDKConfiguration $sdkConfig)
    {
        $this->sdkConfiguration = $sdkConfig;
        $this->consumers = new Consumers($this->sdkConfiguration);
        $this->consumerRequestCounts = new ConsumerRequestCounts($this->sdkConfiguration);
        $this->connections = new Connections($this->sdkConfiguration);
        $this->validateConnection = new ValidateConnection($this->sdkConfiguration);
        $this->createCallback = new CreateCallback($this->sdkConfiguration);
        $this->connectionSettings = new ConnectionSettings($this->sdkConfiguration);
        $this->customFields = new CustomFields($this->sdkConfiguration);
        $this->connectionCustomMappings = new ConnectionCustomMappings($this->sdkConfiguration);
        $this->customMappings = new CustomMappings($this->sdkConfiguration);
        $this->sessions = new Sessions($this->sdkConfiguration);
        $this->logs = new Logs($this->sdkConfiguration);
    }
    /**
     * @param  string  $baseUrl
     * @param  array<string, string>  $urlVariables
     *
     * @return string
     */
    public function getUrl(string $baseUrl, array $urlVariables): string
    {
        $serverDetails = $this->sdkConfiguration->getServerDetails();

        if ($baseUrl == null) {
            $baseUrl = $serverDetails->baseUrl;
        }

        if ($urlVariables == null) {
            $urlVariables = $serverDetails->options;
        }

        return Utils\Utils::templateUrl($baseUrl, $urlVariables);
    }

}